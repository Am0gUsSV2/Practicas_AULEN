
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'C D I L M V XromanNumber : hundred ten digithundred : small_hundred\n               | C D\n               | C M\n               | D small_hundredsmall_hundred : C small_hundred\n                     | lambdaten : small_ten\n            | X L\n            | X C\n            | L small_tensmall_ten : X small_ten\n                 | lambdadigit : small_digit\n              | I V\n              | I X\n              | V small_digitsmall_digit : I small_digit\n                   | lambdalambda :'
    
_lr_action_items = {'C':([0,4,5,9,12,],[4,12,12,24,12,]),'D':([0,4,],[5,13,]),'X':([0,2,3,4,5,6,9,10,12,13,14,15,16,19,22,],[-20,9,-2,-20,-20,-7,22,22,-20,-3,-4,-6,-5,29,22,]),'L':([0,2,3,4,5,6,9,12,13,14,15,16,],[-20,10,-2,-20,-20,-7,23,-20,-3,-4,-6,-5,]),'I':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,22,23,24,25,26,27,],[-20,-20,-2,-20,-20,-7,19,-8,-20,-20,-13,-20,-3,-4,-6,-5,27,27,-20,-9,-10,-12,-11,27,]),'V':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,22,23,24,25,26,],[-20,-20,-2,-20,-20,-7,20,-8,-20,-20,-13,-20,-3,-4,-6,-5,28,-20,-9,-10,-12,-11,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,],[-20,0,-20,-2,-20,-20,-7,-20,-8,-20,-20,-13,-20,-3,-4,-6,-5,-1,-14,-20,-20,-19,-20,-9,-10,-12,-11,-20,-15,-16,-18,-17,]),'M':([4,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'romanNumber':([0,],[1,]),'hundred':([0,],[2,]),'small_hundred':([0,4,5,12,],[3,15,16,15,]),'lambda':([0,2,4,5,7,9,10,12,19,20,22,27,],[6,11,6,6,21,11,11,6,21,21,11,21,]),'ten':([2,],[7,]),'small_ten':([2,9,10,22,],[8,25,26,25,]),'digit':([7,],[17,]),'small_digit':([7,19,20,27,],[18,30,31,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> romanNumber","S'",1,None,None,None),
  ('romanNumber -> hundred ten digit','romanNumber',3,'p_romanNumber','roman_parser.py',8),
  ('hundred -> small_hundred','hundred',1,'p_hundred','roman_parser.py',18),
  ('hundred -> C D','hundred',2,'p_hundred','roman_parser.py',19),
  ('hundred -> C M','hundred',2,'p_hundred','roman_parser.py',20),
  ('hundred -> D small_hundred','hundred',2,'p_hundred','roman_parser.py',21),
  ('small_hundred -> C small_hundred','small_hundred',2,'p_small_hundred','roman_parser.py',35),
  ('small_hundred -> lambda','small_hundred',1,'p_small_hundred','roman_parser.py',36),
  ('ten -> small_ten','ten',1,'p_ten','roman_parser.py',47),
  ('ten -> X L','ten',2,'p_ten','roman_parser.py',48),
  ('ten -> X C','ten',2,'p_ten','roman_parser.py',49),
  ('ten -> L small_ten','ten',2,'p_ten','roman_parser.py',50),
  ('small_ten -> X small_ten','small_ten',2,'p_small_ten','roman_parser.py',62),
  ('small_ten -> lambda','small_ten',1,'p_small_ten','roman_parser.py',63),
  ('digit -> small_digit','digit',1,'p_digit','roman_parser.py',73),
  ('digit -> I V','digit',2,'p_digit','roman_parser.py',74),
  ('digit -> I X','digit',2,'p_digit','roman_parser.py',75),
  ('digit -> V small_digit','digit',2,'p_digit','roman_parser.py',76),
  ('small_digit -> I small_digit','small_digit',2,'p_small_digit','roman_parser.py',88),
  ('small_digit -> lambda','small_digit',1,'p_small_digit','roman_parser.py',89),
  ('lambda -> <empty>','lambda',0,'p_empty','roman_parser.py',99),
]
